<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="e0707124-b407-49f3-8b15-facde6b36269" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/Basics/META-INF/Basics.kotlin_module" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Basics/META-INF/Basics.kotlin_module" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/classes/Main.kt" beforeDir="false" afterPath="$PROJECT_DIR$/src/classes/Main.kt" afterDir="false" />
    </list>
    <ignored path="$PROJECT_DIR$/out/" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="DefaultGradleProjectSettings">
    <option name="isMigrated" value="true" />
  </component>
  <component name="FileEditorManager">
    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
      <file pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/src/spices/Spices.kt">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="256">
              <caret line="12" column="3" selection-start-line="12" selection-start-column="3" selection-end-line="12" selection-end-column="3" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/interfaces/Main2.kt">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="175">
              <caret line="7" column="12" selection-start-line="7" selection-start-column="4" selection-end-line="7" selection-end-column="12" />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
        <option value="Kotlin Class" />
        <option value="Kotlin File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/src/HourOfDay.kt" />
        <option value="$PROJECT_DIR$/src/AMS.kt" />
        <option value="$APPLICATION_CONFIG_DIR$/idea.exe.vmoptions" />
        <option value="$PROJECT_DIR$/src/lesson_2/HourOfDay.kt" />
        <option value="$PROJECT_DIR$/src/FilterExample.kt" />
        <option value="$PROJECT_DIR$/src/filters/FilterExample.kt" />
        <option value="$PROJECT_DIR$/src/lambdas/Lambdaas.kt" />
        <option value="$PROJECT_DIR$/src/classes/Aquarium.java" />
        <option value="$PROJECT_DIR$/src/classes/Auarium.kt" />
        <option value="$PROJECT_DIR$/src/classes/SimpleSpice.kt" />
        <option value="$PROJECT_DIR$/src/classes/Spice.kt" />
        <option value="$PROJECT_DIR$/src/classes/Main.kt" />
        <option value="$PROJECT_DIR$/src/classes/Aquarium.kt" />
        <option value="$PROJECT_DIR$/src/classes/Book.kt" />
        <option value="$PROJECT_DIR$/src/inheritance/Book.kt" />
        <option value="$PROJECT_DIR$/src/interfaces/AquariumFish.kt" />
        <option value="$PROJECT_DIR$/src/interfaces/main.kt" />
        <option value="$PROJECT_DIR$/src/interfaces/Main2.kt" />
        <option value="$PROJECT_DIR$/src/Spices/Spices.kt" />
        <option value="$PROJECT_DIR$/src/spices/Spices.kt" />
      </list>
    </option>
  </component>
  <component name="MavenProjectNavigator">
    <treeState>
      <expand />
      <select />
    </treeState>
  </component>
  <component name="ProjectFrameBounds" extendedState="6">
    <option name="x" value="10" />
    <option name="y" value="20" />
    <option name="width" value="1346" />
    <option name="height" value="688" />
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectView">
    <navigator proportions="" version="1">
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="Scope" />
      <pane id="PackagesPane" />
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="Basics" type="b2602c69:ProjectViewProjectNode" />
              <item name="Basics" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Basics" type="b2602c69:ProjectViewProjectNode" />
              <item name="Basics" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Basics" type="b2602c69:ProjectViewProjectNode" />
              <item name="Basics" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="classes" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Basics" type="b2602c69:ProjectViewProjectNode" />
              <item name="Basics" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="interfaces" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Basics" type="b2602c69:ProjectViewProjectNode" />
              <item name="Basics" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="spices" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="settings.editor.selected.configurable" value="preferences.pluginManager" />
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\shoaibmohdkhan\IdeaProjects\Basics\src\inheritance" />
      <recent name="C:\Users\shoaibmohdkhan\IdeaProjects\Basics\src\filters" />
      <recent name="C:\Users\shoaibmohdkhan\IdeaProjects\Basics\src\lesson_2" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Kotlin.spices.SpicesKt">
    <configuration name="classes.MainKt" type="JetRunConfigurationType" factoryName="Kotlin" temporary="true" nameIsGenerated="true">
      <module name="Basics" />
      <option name="VM_PARAMETERS" />
      <option name="PROGRAM_PARAMETERS" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="MAIN_CLASS_NAME" value="classes.MainKt" />
      <option name="WORKING_DIRECTORY" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="interfaces.Main2Kt" type="JetRunConfigurationType" factoryName="Kotlin" temporary="true" nameIsGenerated="true">
      <module name="Basics" />
      <option name="VM_PARAMETERS" />
      <option name="PROGRAM_PARAMETERS" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="MAIN_CLASS_NAME" value="interfaces.Main2Kt" />
      <option name="WORKING_DIRECTORY" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="interfaces.MainKt" type="JetRunConfigurationType" factoryName="Kotlin" temporary="true" nameIsGenerated="true">
      <module name="Basics" />
      <option name="VM_PARAMETERS" />
      <option name="PROGRAM_PARAMETERS" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="MAIN_CLASS_NAME" value="interfaces.MainKt" />
      <option name="WORKING_DIRECTORY" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="lambdas.LambdaasKt" type="JetRunConfigurationType" factoryName="Kotlin" temporary="true" nameIsGenerated="true">
      <module name="Basics" />
      <option name="VM_PARAMETERS" />
      <option name="PROGRAM_PARAMETERS" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="MAIN_CLASS_NAME" value="lambdas.LambdaasKt" />
      <option name="WORKING_DIRECTORY" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="spices.SpicesKt" type="JetRunConfigurationType" factoryName="Kotlin" temporary="true" nameIsGenerated="true">
      <module name="Basics" />
      <option name="VM_PARAMETERS" />
      <option name="PROGRAM_PARAMETERS" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="MAIN_CLASS_NAME" value="spices.SpicesKt" />
      <option name="WORKING_DIRECTORY" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="Kotlin.classes.MainKt" />
      <item itemvalue="Kotlin.interfaces.Main2Kt" />
      <item itemvalue="Kotlin.interfaces.MainKt" />
      <item itemvalue="Kotlin.lambdas.LambdaasKt" />
      <item itemvalue="Kotlin.spices.SpicesKt" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Kotlin.spices.SpicesKt" />
        <item itemvalue="Kotlin.interfaces.Main2Kt" />
        <item itemvalue="Kotlin.interfaces.MainKt" />
        <item itemvalue="Kotlin.classes.MainKt" />
        <item itemvalue="Kotlin.lambdas.LambdaasKt" />
      </list>
    </recent_temporary>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="e0707124-b407-49f3-8b15-facde6b36269" name="Default Changelist" comment="" />
      <created>1559884410705</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1559884410705</updated>
    </task>
    <task id="LOCAL-00001" summary="Filters in Kotlin&#10;------------------------&#10;- Filter can filter a list.&#10;- Filters are of eagar and lazy type&#10;- Filters can create whole duplicate list&#10;- asSequence is just opposite(they not create duplicate list )">
      <created>1559967854214</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1559967854214</updated>
    </task>
    <task id="LOCAL-00002" summary="Lambda in Kotlin&#10;------------------------&#10;To define a lambda, we need to stick to the syntax:&#10;&#10;val lambdaName : Type = { argumentList -&gt; codeBody }&#10;&#10;Type Inference&#10;Kotlin’s type inference allows the type of a lambda to be evaluated by the compiler.&#10;&#10;Writing a lambda that produces the square of a number would be as written as:&#10;&#10;val square = { number: Int -&gt; number * number }&#10;val nine = square(3)&#10;&#10;Kotlin will evaluate the above example to be a function that takes one Int and returns an Int: (Int) -&gt; Int&#10;&#10;If we wanted to create a lambda that multiplies its single argument numbers by 100 then returns that value as a String:&#10;&#10;val magnitude100String = { input : Int -&gt;&#10;    val magnitude = input * 100&#10;    magnitude.toString()&#10;}&#10;&#10;Kotlin will understand that this lambda is of type (Int) -&gt; String.&#10;&#10;Type Declaration&#10;Occasionally Kotlin can’t infer our types and we must explicitly declare the type for our lambda; just as we can with any other type.&#10;&#10;The pattern is input -&gt; output, however, if the code returns no value we use the type Unit:&#10;&#10;val that : Int -&gt; Int = { three -&gt; three }&#10;val more : (String, Int) -&gt; String = { str, int -&gt; str + int }&#10;val noReturn : Int -&gt; Unit = { num -&gt; println(num) }">
      <created>1559973602726</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1559973602726</updated>
    </task>
    <task id="LOCAL-00003" summary="Classes in Kotlin&#10;------------------------&#10;- Access can be public,private,protected,internal&#10;- public visible to all &#10;- private visible to file or(class in which it written)&#10;- protected visible to file and sub classes&#10;- internal visible to module(if compile in library then it will not visible to other classes)">
      <created>1559984474137</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1559984474137</updated>
    </task>
    <task id="LOCAL-00004" summary="Classes in Kotlin&#10;------------------------&#10;Constructor in Class&#10;&#10;- class can have constructor &#10;   - ClassName(var Height: Int = 20)&#10;   - constructor with Default values&#10;   - no need to reassign value as we do in java&#10;     example&#10;        ClassName(int height)&#10;        {   this.height = height&#10;          }&#10;&#10;- constructor with different value Or &#10;     constructor(numberOfFish: Int) : this() {&#10;             val water: Int = numberOfFish * 2000 &#10;             val tank: Double = water + water * 0.1&#10;             height =(tank/ (length* width)).toInt()&#10;     &#10;        }">
      <created>1559986116664</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1559986116664</updated>
    </task>
    <task id="LOCAL-00005" summary="Classes in Kotlin&#10;------------------------&#10;Constructor in Class&#10;&#10;- class can have constructor &#10;   - ClassName(var Height: Int = 20)&#10;   - constructor with Default values&#10;   - no need to reassign value as we do in java&#10;     example&#10;        ClassName(int height)&#10;        {   this.height = height&#10;          }&#10;&#10;- constructor (also called Secondary constructor)with different value Or &#10;     constructor(numberOfFish: Int) : this() {&#10;             val water: Int = numberOfFish * 2000 &#10;             val tank: Double = water + water * 0.1&#10;             height =(tank/ (length* width)).toInt()&#10;     &#10;        }">
      <created>1559988145234</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1559988145234</updated>
    </task>
    <task id="LOCAL-00006" summary="Inheritance in Kotlin&#10;------------------------&#10;- classes with &quot;open&quot; modifier is inheritable&#10;- syntax to inheritance&#10;    class eBook(title :String):Book(title){}&#10;- for overriding declaration of function use &quot;open&quot;&#10;    1- open fun readPage(){....} // must have&#10;    2- override fun readPage(){...} // overriding here">
      <created>1559989736233</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1559989736233</updated>
    </task>
    <task id="LOCAL-00007" summary="Interface in Kotlin&#10;------------------------&#10;- Interface Vs abstract class&#10;   -- Difference&#10;   - abstract classes can have &quot;constructor&quot; &#10;   - Interface can not have &quot;constructor&quot;&#10;   &#10;   -- Similarity&#10;   - Both can have implementation of &quot;Methods&quot;">
      <created>1559992111731</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1559992111731</updated>
    </task>
    <task id="LOCAL-00008" summary="Interface in Kotlin&#10;------------------------&#10;- Interface Vs abstract class&#10;   -- Difference&#10;   - abstract classes can have &quot;constructor&quot; &#10;   - Interface can not have &quot;constructor&quot;&#10;   &#10;   -- Similarity&#10;   - Both can have implementation of &quot;Methods&quot;&#10;   &#10;- object keyword is used for creating single object&#10;  like singleton pattern in java&#10;     &#10;     object GoldenColor : FishColor2 {&#10;         override val color: String&#10;             get() = &quot;Gold&quot;&#10;     }">
      <created>1559993665892</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1559993665892</updated>
    </task>
    <option name="localTasksCounter" value="9" />
    <servers />
  </component>
  <component name="ToolWindowManager">
    <frame x="-8" y="-8" width="1382" height="744" extended-state="6" />
    <editor active="true" />
    <layout>
      <window_info content_ui="combo" id="Project" order="0" visible="true" weight="0.0325511" />
      <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
      <window_info id="Image Layers" order="2" />
      <window_info id="Designer" order="3" />
      <window_info id="UI Designer" order="4" />
      <window_info id="Capture Tool" order="5" />
      <window_info id="Favorites" order="6" side_tool="true" />
      <window_info anchor="bottom" id="Message" order="0" />
      <window_info anchor="bottom" id="Find" order="1" weight="0.3289689" />
      <window_info active="true" anchor="bottom" id="Run" order="2" visible="true" weight="0.19312602" />
      <window_info anchor="bottom" id="Debug" order="3" weight="0.4" />
      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
      <window_info anchor="bottom" id="TODO" order="6" />
      <window_info anchor="bottom" id="Terminal" order="7" weight="0.65139115" />
      <window_info anchor="bottom" id="Version Control" order="8" weight="0.3289689" />
      <window_info anchor="bottom" id="Messages" order="9" weight="0.3764321" />
      <window_info anchor="bottom" id="Event Log" order="10" side_tool="true" weight="0.32733223" />
      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
      <window_info anchor="right" id="Palette" order="3" />
      <window_info anchor="right" id="Theme Preview" order="4" />
      <window_info anchor="right" id="Capture Analysis" order="5" />
      <window_info anchor="right" id="Palette&#9;" order="6" />
      <window_info anchor="right" id="Maven" order="7" weight="0.32980332" />
      <window_info anchor="right" id="Key Promoter X" order="8" weight="0.32980332" />
    </layout>
    <layout-to-restore>
      <window_info id="Image Layers" order="0" />
      <window_info id="Designer" order="1" />
      <window_info id="UI Designer" order="2" />
      <window_info id="Capture Tool" order="3" />
      <window_info id="Favorites" order="4" side_tool="true" />
      <window_info active="true" content_ui="combo" id="Project" order="5" visible="true" weight="0.13313162" />
      <window_info id="Structure" order="6" side_tool="true" weight="0.25" />
      <window_info anchor="bottom" id="Version Control" order="0" />
      <window_info anchor="bottom" id="Terminal" order="1" />
      <window_info anchor="bottom" id="Event Log" order="2" side_tool="true" />
      <window_info anchor="bottom" id="Messages" order="3" weight="0.3289689" />
      <window_info anchor="bottom" id="Message" order="4" />
      <window_info anchor="bottom" id="Find" order="5" />
      <window_info anchor="bottom" id="Run" order="6" weight="0.78723407" />
      <window_info anchor="bottom" id="Debug" order="7" weight="0.4" />
      <window_info anchor="bottom" id="Cvs" order="8" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="9" weight="0.4" />
      <window_info anchor="bottom" id="TODO" order="10" />
      <window_info anchor="right" id="Palette" order="0" />
      <window_info anchor="right" id="Capture Analysis" order="1" />
      <window_info anchor="right" id="Theme Preview" order="2" />
      <window_info anchor="right" id="Palette&#9;" order="3" />
      <window_info anchor="right" id="Maven" order="4" />
      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="5" type="SLIDING" weight="0.4" />
      <window_info anchor="right" id="Ant Build" order="6" weight="0.25" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="7" weight="0.25" />
    </layout-to-restore>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="CHECK_CODE_CLEANUP_BEFORE_PROJECT_COMMIT" value="true" />
    <MESSAGE value="Filters in Kotlin&#10;------------------------&#10;- Filter can filter a list.&#10;- Filters are of eagar and lazy type&#10;- Filters can create whole duplicate list&#10;- asSequence is just opposite(they not create duplicate list )" />
    <MESSAGE value="Lambda in Kotlin&#10;------------------------&#10;To define a lambda, we need to stick to the syntax:&#10;&#10;val lambdaName : Type = { argumentList -&gt; codeBody }&#10;&#10;Type Inference&#10;Kotlin’s type inference allows the type of a lambda to be evaluated by the compiler.&#10;&#10;Writing a lambda that produces the square of a number would be as written as:&#10;&#10;val square = { number: Int -&gt; number * number }&#10;val nine = square(3)&#10;&#10;Kotlin will evaluate the above example to be a function that takes one Int and returns an Int: (Int) -&gt; Int&#10;&#10;If we wanted to create a lambda that multiplies its single argument numbers by 100 then returns that value as a String:&#10;&#10;val magnitude100String = { input : Int -&gt;&#10;    val magnitude = input * 100&#10;    magnitude.toString()&#10;}&#10;&#10;Kotlin will understand that this lambda is of type (Int) -&gt; String.&#10;&#10;Type Declaration&#10;Occasionally Kotlin can’t infer our types and we must explicitly declare the type for our lambda; just as we can with any other type.&#10;&#10;The pattern is input -&gt; output, however, if the code returns no value we use the type Unit:&#10;&#10;val that : Int -&gt; Int = { three -&gt; three }&#10;val more : (String, Int) -&gt; String = { str, int -&gt; str + int }&#10;val noReturn : Int -&gt; Unit = { num -&gt; println(num) }" />
    <MESSAGE value="Classes in Kotlin&#10;------------------------&#10;- Access can be public,private,protected,internal&#10;- public visible to all &#10;- private visible to file or(class in which it written)&#10;- protected visible to file and sub classes&#10;- internal visible to module(if compile in library then it will not visible to other classes)" />
    <MESSAGE value="Classes in Kotlin&#10;------------------------&#10;Constructor in Class&#10;&#10;- class can have constructor &#10;   - ClassName(var Height: Int = 20)&#10;   - constructor with Default values&#10;   - no need to reassign value as we do in java&#10;     example&#10;        ClassName(int height)&#10;        {   this.height = height&#10;          }&#10;&#10;- constructor with different value Or &#10;     constructor(numberOfFish: Int) : this() {&#10;             val water: Int = numberOfFish * 2000 &#10;             val tank: Double = water + water * 0.1&#10;             height =(tank/ (length* width)).toInt()&#10;     &#10;        }" />
    <MESSAGE value="Classes in Kotlin&#10;------------------------&#10;Constructor in Class&#10;&#10;- class can have constructor &#10;   - ClassName(var Height: Int = 20)&#10;   - constructor with Default values&#10;   - no need to reassign value as we do in java&#10;     example&#10;        ClassName(int height)&#10;        {   this.height = height&#10;          }&#10;&#10;- constructor (also called Secondary constructor)with different value Or &#10;     constructor(numberOfFish: Int) : this() {&#10;             val water: Int = numberOfFish * 2000 &#10;             val tank: Double = water + water * 0.1&#10;             height =(tank/ (length* width)).toInt()&#10;     &#10;        }" />
    <MESSAGE value="Inheritance in Kotlin&#10;------------------------&#10;- classes with &quot;open&quot; modifier is inheritable&#10;- syntax to inheritance&#10;    class eBook(title :String):Book(title){}&#10;- for overriding declaration of function use &quot;open&quot;&#10;    1- open fun readPage(){....} // must have&#10;    2- override fun readPage(){...} // overriding here" />
    <MESSAGE value="Interface in Kotlin&#10;------------------------&#10;- Interface Vs abstract class&#10;   -- Difference&#10;   - abstract classes can have &quot;constructor&quot; &#10;   - Interface can not have &quot;constructor&quot;&#10;   &#10;   -- Similarity&#10;   - Both can have implementation of &quot;Methods&quot;" />
    <MESSAGE value="Interface in Kotlin&#10;------------------------&#10;- Interface Vs abstract class&#10;   -- Difference&#10;   - abstract classes can have &quot;constructor&quot; &#10;   - Interface can not have &quot;constructor&quot;&#10;   &#10;   -- Similarity&#10;   - Both can have implementation of &quot;Methods&quot;&#10;   &#10;- object keyword is used for creating single object&#10;  like singleton pattern in java&#10;     &#10;     object GoldenColor : FishColor2 {&#10;         override val color: String&#10;             get() = &quot;Gold&quot;&#10;     }" />
    <option name="LAST_COMMIT_MESSAGE" value="Interface in Kotlin&#10;------------------------&#10;- Interface Vs abstract class&#10;   -- Difference&#10;   - abstract classes can have &quot;constructor&quot; &#10;   - Interface can not have &quot;constructor&quot;&#10;   &#10;   -- Similarity&#10;   - Both can have implementation of &quot;Methods&quot;&#10;   &#10;- object keyword is used for creating single object&#10;  like singleton pattern in java&#10;     &#10;     object GoldenColor : FishColor2 {&#10;         override val color: String&#10;             get() = &quot;Gold&quot;&#10;     }" />
    <option name="OPTIMIZE_IMPORTS_BEFORE_PROJECT_COMMIT" value="true" />
    <option name="REFORMAT_BEFORE_PROJECT_COMMIT" value="true" />
    <option name="REARRANGE_BEFORE_PROJECT_COMMIT" value="true" />
  </component>
  <component name="editorHistoryManager">
    <entry file="jar://C:/Program Files/Java/jdk1.8.0_211/src.zip!/java/lang/Integer.java">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="7">
          <caret line="579" column="48" selection-start-line="579" selection-start-column="48" selection-end-line="579" selection-end-column="48" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$KOTLIN_BUNDLED$/lib/kotlin-stdlib.jar!/kotlin/collections/collections.kotlin_builtins">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="25">
          <caret line="27" column="26" selection-start-line="27" selection-start-column="26" selection-end-line="27" selection-end-column="26" />
        </state>
      </provider>
    </entry>
    <entry file="file://$APPLICATION_CONFIG_DIR$/idea.exe.vmoptions">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="300">
          <caret line="12" lean-forward="true" selection-start-line="12" selection-end-line="12" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/lesson_2/HourOfDay.kt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="575">
          <caret line="23" selection-start-line="23" selection-end-line="23" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/filters/FilterExample.kt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="374">
          <caret line="42" column="1" selection-start-line="42" selection-start-column="1" selection-end-line="42" selection-end-column="1" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/AMS.kt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="275">
          <caret line="11" column="27" selection-start-line="11" selection-start-column="27" selection-end-line="11" selection-end-column="27" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/classes/Aquarium.java" />
    <entry file="file://$PROJECT_DIR$/src/lambdas/Lambdaas.kt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="161">
          <caret line="9" lean-forward="true" selection-start-line="9" selection-end-line="9" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/classes/SimpleSpice.kt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="18">
          <caret line="7" column="14" lean-forward="true" selection-start-line="7" selection-start-column="14" selection-end-line="7" selection-end-column="14" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/inheritance/Book.kt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="413">
          <caret line="26" column="1" selection-start-line="26" selection-start-column="1" selection-end-line="26" selection-end-column="1" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/classes/Aquarium.kt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="75">
          <caret line="3" selection-start-line="3" selection-end-line="4" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/classes/Main.kt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="868">
          <caret line="55" column="42" lean-forward="true" selection-start-line="55" selection-start-column="42" selection-end-line="55" selection-end-column="42" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/interfaces/main.kt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="300">
          <caret line="12" column="1" lean-forward="true" selection-start-line="12" selection-start-column="1" selection-end-line="12" selection-end-column="1" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/interfaces/AquariumFish.kt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="188">
          <caret line="13" column="25" selection-start-line="13" selection-start-column="25" selection-end-line="13" selection-end-column="25" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/classes/Spice.kt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="63">
          <caret line="18" selection-start-line="18" selection-end-line="32" selection-end-column="1" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/interfaces/Main2.kt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="175">
          <caret line="7" column="12" selection-start-line="7" selection-start-column="4" selection-end-line="7" selection-end-column="12" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/spices/Spices.kt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="256">
          <caret line="12" column="3" selection-start-line="12" selection-start-column="3" selection-end-line="12" selection-end-column="3" />
        </state>
      </provider>
    </entry>
  </component>
</project>